/*		 
 * fastutil: Fast & compact type-specific collections for Java
 *
 * Copyright (C) 2002-2008 Paolo Boldi and Sebastiano Vigna 
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

package PACKAGE;

import it.unimi.dsi.fastutil.AbstractPriorityQueue;

/**  An abstract class providing basic methods for priority queues implementing a type-specific interface.
 *
 */

public abstract class ABSTRACT_PRIORITY_QUEUE KEY_GENERIC extends AbstractPriorityQueue<KEY_GENERIC_CLASS> implements PRIORITY_QUEUE KEY_GENERIC  {

	/** Delegates to the corresponding type-specific method. */
	public void enqueue( final KEY_GENERIC_CLASS x ) { enqueue( x.KEY_VALUE() ); }

	/** Delegates to the corresponding type-specific method. */
	public KEY_GENERIC_CLASS dequeue() { return KEY2OBJ( DEQUEUE() ); }

	/** Delegates to the corresponding type-specific method. */
	public KEY_GENERIC_CLASS first() { return KEY2OBJ( FIRST() ); }

	/** Delegates to the corresponding type-specific method. */
	public KEY_GENERIC_CLASS last() { return KEY2OBJ( LAST() ); }

	/** Throws an {@link UnsupportedOperationException}. */
	public KEY_TYPE LAST() { throw new UnsupportedOperationException(); }
}
